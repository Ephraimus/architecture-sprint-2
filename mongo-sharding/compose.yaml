version: '3.8'
name: mongo-sharding

services:
  # Конфигурационный сервер
  configsvr:
    image: mongo
    container_name: configsvr
    command: ["mongod", "--configsvr", "--replSet", "configReplSet", "--port", "27017", "--bind_ip_all"]
    volumes:
      - configsvr_data:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: [ "CMD","mongo","--eval","db.adminCommand('ping')" ]
      interval: 1s
      start_period: 15s


  shard1:
    image: mongo
    container_name: shard1
    command: ["mongod", "--shardsvr", "--replSet", "shard1ReplSet", "--port", "27018", "--bind_ip_all"]
    volumes:
      - shard1_data:/data/db
    ports:
      - 27018:27018
    healthcheck:
      test: [ "CMD","mongo","--eval","db.adminCommand('ping')" ]
      interval: 1s
      start_period: 15s


  shard2:
    image: mongo
    container_name: shard2
    command: ["mongod", "--shardsvr", "--replSet", "shard2ReplSet", "--port", "27019", "--bind_ip_all"]
    volumes:
      - shard2_data:/data/db
    ports:
      - 27019:27019
    healthcheck:
      test: [ "CMD","mongo","--eval","db.adminCommand('ping')" ]
      interval: 1s
      start_period: 15s

  # Роутер
  mongos:
    image: mongo
    container_name: mongos
    command: >
      mongos --configdb configReplSet/configsvr:27017 --bind_ip_all --port 27020
    depends_on:
      - configsvr
      - shard1
      - shard2
    ports:
      - 27020:27020
    healthcheck:
      test: [ "CMD","mongo","--eval","db.adminCommand('ping')" ]
      interval: 1s
      start_period: 15s


  # Ваш pymongo_api
  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos:27020"
      MONGODB_DATABASE_NAME: "somedb"

volumes:
  configsvr_data:
  shard1_data:
  shard2_data:
